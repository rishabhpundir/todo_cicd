# K8s Deployment/Service for TodoApp


# Service for todoapp
apiVersion: v1
kind: Service
metadata:
  name: todocicd-service
  labels:
    app: todoapp
spec:
  selector:
    app: todoapp
    tier: cicdapp
  ports:
    - port: 8000
      # targetPort: 8001
  type: LoadBalancer

---

# Volume for todo app
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: todo-app-volume
  labels:
    app: django
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

# Deployment for Todoapp
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todocicd-deploy
  labels:
    app: todoapp
spec:
  # replicas: 3
  selector:
    matchLabels:
      app: todoapp
      tier: cicdapp
  template:
    metadata:
      labels:
        app: todoapp
        tier: cicdapp
    spec:
      volumes:
        - name: todoapp-data
          persistentVolumeClaim:
            claimName: todo-app-volume
      containers:
      
        # TodoApp Django App Config
        - image: todocicd:latest
          name: todoapp
          imagePullPolicy: Never
          volumeMounts:
            - name: todoapp-data
              mountPath: /vol/web
          env:
            - name: SECRET_KEY
              value: ${SECRET_KEY}

            - name: DB_HOST
              value: ${DB_HOST}

            - name: DB_PORT
              value: ${DB_PORT}

            - name: POSTGRES_DB
              value: ${POSTGRES_DB}

            - name: POSTGRES_USER
              value: ${POSTGRES_USER}

            - name: POSTGRES_PASSWORD
              value: ${POSTGRES_PASSWORD}

          # ports:
          # - containerPort: 8000

        # Todo Nginx Config
        - image: todonginx:latest
          imagePullPolicy: Never
          name: nginx
          ports:
            - containerPort: 8000
              name: nginx
          volumeMounts:
            - name: todoapp-data
              mountPath: /vol/web
          env:
            - name: APP_HOST
              value: "127.0.0.1"
            - name: APP_PORT
              value: "8000"

  strategy:
    type: Recreate
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 1